const { vk, vkHelp, sendEventAnswer } = require('../../settings/vk');
const { numberWithSpace } = require('../../settings/tools');
const { minusBalanceUser, plusWithdrawnCubes, getUser } = require('../../database/managers/user');
const { sendCazis, whatReserve } = require('../../settings/cazis');

module.exports = withdrawnCubes = async (msg) => {
  const { id, balance } = await getUser(msg.userId);
  const reserve = await whatReserve();
  console.log(reserve, balance);

  if (balance <= 0) {
    return sendEventAnswer(msg, '‚ùó–ù–µ–ª—å–∑—è –≤—ã–≤–µ—Å—Ç–∏ –ø—É—Å—Ç–æ–π –±–∞–ª–∞–Ω—Å', 'show_snackbar');
  }

  if (balance > reserve) {
    return sendEventAnswer(
      msg,
      '‚ùó–°–µ–π—á–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —ç—Ç–æ–π —Å—É–º–º—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–∑–∂–µ',
      'show_snackbar',
    );
  }

  if (balance >= 700_000_000) {
    vkHelp({
      peer_id: 297789589,
      message: `–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥:\n\n@id${id}(–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - ${numberWithSpace(balance)} –∫—É–±–∏–∫–æ–≤`,
    });

    return sendEventAnswer(
      msg,
      '‚ùó–¢–∞–∫–∏–µ –±–æ–ª—å—à–∏–µ –≤—ã–≤–æ–¥—ã –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—ã–≤–æ–¥" –º–Ω–æ–≥–æ —Ä–∞–∑, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –æ–ø–æ–≤–µ—â–µ–Ω–∞ –æ –∑–∞—è–≤–∫–µ',
      'show_snackbar',
    );
  }

  const forPush = balance;

  await sendCazis(id, balance);

  await minusBalanceUser(id, balance);

  await plusWithdrawnCubes(id, balance);

  sendEventAnswer(
    msg,
    `‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–ª–∏ ${numberWithSpace(balance.toFixed(0))} üíé, –∂–¥—ë–º –≤–∞—Å —Å–Ω–æ–≤–∞!`,
    'show_snackbar',
  );

  const balanceAfterWithdraw = await whatReserve();

  return vkHelp({
    peer_id: 297789589,
    message: `@id${id}(–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) –≤—ã–≤–æ–¥–∏—Ç ${numberWithSpace(
      forPush.toFixed(0),
    )} –∫—É–±–∏–∫–æ–≤\n\n–†–µ–∑–µ—Ä–≤ –∫–∞–∑–∏–Ω–æ: ${numberWithSpace(Number(balanceAfterWithdraw).toFixed(0))}`,
  });
};
