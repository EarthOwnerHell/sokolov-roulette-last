const { vk, questionManager, vkHelp } = require('../../settings/vk');
const { numberWithSpace, translateGroupTypes } = require('../../settings/tools');
const promo = require('../../database/managers/promo');
const chat = require('../../database/managers/chat');

vk.updates.use(questionManager.middleware);

module.exports = changeGroupType = async (msg) => {
    const groupIdAsk = await msg.question('–í–≤–µ–¥–∏—Ç–µ peerId –±–µ—Å–µ–¥—ã:');

    const groupId = groupIdAsk.text;

    const checkGroup = await chat.getChat(groupId);

    if (!checkGroup) return msg.send(`–ë–µ—Å–µ–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

    const groupTypeQuestion = await msg.question('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –±–µ—Å–µ–¥—ã (official, standart, vip, premium):');

    const groupType = groupTypeQuestion.text

    const newGroupType = await chat.setGroupType(groupId, groupType);

    msg.send(`–ü–æ–º–µ–Ω—è–ª–∏ —Ç–∏–ø –±–µ—Å–µ–¥—ã –Ω–∞ ${groupType}`)

    return vkHelp({peer_id: groupId, message: `‚ùï –£–≤–∞–∂–∞–µ–º—ã–µ –∞–¥–º–∏–Ω—ã –±–µ—Å–µ–¥—ã!\n\nüî• –°—Ç–∞—Ç—É—Å —ç—Ç–æ–π –±–µ—Å–µ–¥—ã –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ¬´${translateGroupTypes[groupType]}¬ª`})

};
