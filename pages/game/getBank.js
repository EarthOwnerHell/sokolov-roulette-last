const honestyMenu = require("../../keyboards/inline/honestyMenu");
const createGame = require("./helpers/createGame")

const { vkHelp } = require("../../settings/vk");
const { numberWithSpace, convertMsToSec, numbersToEmoji, formClick } = require("../../tools");
const { getGame } = require("./helpers/gameInfo")

module.exports = async (msg) => {

    const noBettings = (hash) => {
        vkHelp.msg({ peer_id: msg.peerId, message: 'üíµ –°—Ç–∞–≤–∫–∏:\n\n–ü–æ—Ö–æ–∂–µ, –µ—â—ë –Ω–∏–∫—Ç–æ –Ω–µ\n—Å–¥–µ–ª–∞–ª —Å—Ç–∞–≤–∫—É‚Ä¶', keyboard: honestyMenu(hash, false) })

        vkHelp.sendEventAnswer({
            peer_id: msg.peerId,
            user_id: msg?.userId,
            event_id: msg.eventId,
        })
    }

    const game = getGame(msg.peerId)

    if (!game) {
        const hash = createGame({ chatId: msg.peerId });

        return noBettings(hash)
    }

    const { bets, hash, endTime } = game;

    if (!Object.values(bets).length) return noBettings(hash)

    vkHelp.sendEventAnswer({
        peer_id: msg.peerId,
        user_id: msg.userId,
        event_id: msg.eventId
    })

    /* 
        –í–∏–¥ —Å—Ç–∞–≤–∫–∏:
            number: {
                value: null,
                amount: null
            },
            color: {
                value: null,
                amount: null
            },
            diaposon: {
                value: null,
                amount: null
            },
    
    */

    const betValues = {
        'betRed': {
            text: 'üî¥ –ù–∞ –∫—Ä–∞—Å–Ω–æ–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0,
        },
        'betBlack': {
            text: '‚ö´ –ù–∞ —á–µ—Ä–Ω–æ–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0
        },
        'betEven': {
            text: 'üî∂ –ù–∞ —á–µ—Ç–Ω–æ–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0
        },
        'betOdd': {
            text: 'üî∑ –ù–∞ –Ω–µ—á–µ—Ç–Ω–æ–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0
        },
        'betOnFirstDiaposon': {
            text: '1Ô∏è‚É£ - 1Ô∏è‚É£2Ô∏è‚É£ –ù–∞ 1-12 –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0
        },
        'betOnSecondDiaposon': {
            text: '1Ô∏è‚É£3Ô∏è‚É£ - 2Ô∏è‚É£4Ô∏è‚É£ –ù–∞ 13-24 –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0
        },
        'betOnThirdDiaposon': {
            text: '2Ô∏è‚É£5Ô∏è‚É£ - 3Ô∏è‚É£6Ô∏è‚É£ –ù–∞ 25-36 –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0,
        },
        'betOnNumber': {
            text: 'üî¢ –ù–∞ —á–∏—Å–ª–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏:\n\n',
            countBets: 0
        }
    }

    let textBank = `üíµ –°—Ç–∞–≤–∫–∏:\n\n`

    for (let userId in bets) {
        const { number, color, diaposon, typeNumber } = bets[userId]

        if (number?.value) {
            betValues['betOnNumber'].text += `${formClick(userId, await vkHelp.getName(userId))} ‚ûú ${numberWithSpace(number.amount)} $ –Ω–∞ ${numbersToEmoji(number.value)}\n`
            betValues['betOnNumber'].countBets++
        }

        if (typeNumber?.value) {
            betValues[typeNumber.value].text += `${formClick(userId, await vkHelp.getName(userId))} ‚ûú ${numberWithSpace(typeNumber.amount)} $\n`
            betValues[typeNumber.value].countBets++
        }

        if (color?.value) {
            betValues[color.value].text += `${formClick(userId, await vkHelp.getName(userId))} ‚ûú ${numberWithSpace(color.amount)} $\n`
            betValues[color.value].countBets++
        }

        if (diaposon?.value) {
            betValues[diaposon.value].text += `${formClick(userId, await vkHelp.getName(userId))} ‚ûú ${numberWithSpace(diaposon.amount)} $\n`
            betValues[diaposon.value].countBets++
        }
    }

    for (let key in betValues) {
        const { countBets, text } = betValues[key]

        if (countBets) textBank += `${text}\n`;
    }

    textBank += `‚åõ –î–æ –∫–æ–Ω—Ü–∞ —Ä–∞—É–Ω–¥–∞: ${convertMsToSec(endTime - Date.now())} —Å–µ–∫.`;

    vkHelp.msg({
        peer_id: msg.peerId,
        message: textBank,
        keyboard: honestyMenu(hash, false)
    })
}
