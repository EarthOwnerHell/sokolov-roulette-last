const { dbUser, dbUserStat } = require("../../database/managers/user");
const { vkHelp } = require("../../settings/vk");

const { getGame, addBetToGame, checkBetUserValueInBets } = require('./helpers/gameInfo.js')

const createGame = require('./helpers/createGame.js')

const createBetOnNumber = async ({
    amountBet,
    msg,
    game
}) => {
    let numberForBet = await msg.question('üî¢ –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:')

    numberForBet = Number(numberForBet.text)

    if (!numberForBet) return msg.send('‚ùó –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!\n‚ùó –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')

    numberForBet = Math.floor(numberForBet);

    if (numberForBet < 1 || numberForBet > 36) return msg.send('‚ùó –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!\n‚ùó –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')

    const checkUserValueForBet = checkBetUserValueInBets({ peerId: msg.peerId, userId: msg.senderId, betValue: numberForBet, betType: msg.messagePayload.betType });

    if (!checkUserValueForBet) return msg.send('‚õî –¢—ã —É–∂–µ –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!')

    dbUserStat.minus(msg.senderId, amountBet, 'balancesInfo.main');

    msg.send(`‚úÖ ${await vkHelp.getName(msg.senderId)}, –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à—É —Å—Ç–∞–≤–∫—É`);
    
        const doubleCheckGame = getGame(msg.peerId)

    if (!doubleCheckGame) {
        createGame({ chatId: msg.peerId })
    }

    addBetToGame({
        peerId: msg.peerId,
        userId: msg.senderId,
        betType: msg.messagePayload.betType,
        betValue: numberForBet,
        betAmount: amountBet,
    })
}

module.exports = async (msg) => {
    const { balancesInfo: { main }} = await dbUser.get(msg.senderId, { balancesInfo: 1, });

    const game = getGame(msg.peerId)

    if (!game) {
        createGame({ chatId: msg.peerId })
    }

    if (game?.endTime && game?.endTime - Date.now() < 3_000) return msg.send('‚åõ –î–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã –æ—Å—Ç–∞–ª–æ—Å—å 3 —Å–µ–∫—É–Ω–¥—ã, –ø–æ—Å—Ç–∞–≤—å –≤ —Å–ª–µ–¥—É—é—â–µ–π.'); 

    if (main < 1) return msg.send('üò® –£ —Ç–µ–±—è –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –º–µ–Ω—å—à–µ 1 $');

    let betAmount = await msg.question('üßæ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏:');

    betAmount = Number(betAmount.text);

    if (betAmount < 1 || betAmount >= main || !betAmount) return msg.send('‚ùó –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!\n‚ùó –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');

    if (msg.messagePayload.betType === 'number') return createBetOnNumber({ amountBet: betAmount, msg: msg, game: game })

    const checkUserValueForBet = checkBetUserValueInBets({ peerId: msg.peerId, userId: msg.senderId, betValue: msg.messagePayload.command, betType: msg.messagePayload.betType });

    if (!checkUserValueForBet) return msg.send('‚õî –¢—ã —É–∂–µ –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!')

    dbUserStat.minus(msg.senderId, betAmount, 'balancesInfo.main');

    msg.send(`‚úÖ ${await vkHelp.getName(msg.senderId)}, –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à—É —Å—Ç–∞–≤–∫—É`);
    
        const doubleCheckGame = getGame(msg.peerId)

    if (!doubleCheckGame) {
        createGame({ chatId: msg.peerId })
    }

    addBetToGame({
        peerId: msg.peerId,
        userId: msg.senderId,
        betType: msg.messagePayload.betType,
        betValue: msg.messagePayload.command,
        betAmount: betAmount,
    })
}
