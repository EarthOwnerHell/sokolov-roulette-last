const { createCollectIterator } = require('vk-io');
const noButtonBoard = require('../../keyboards/inline/acceptMailing.js');

const { api } = require('../../settings/vk.js')

const adminHelper = {
    getPeoplesToMailing: async () => {
        let users = [];
    
        const iterator = createCollectIterator({
            api,
            method: 'messages.getDialogs',
            countPerRequest: 100,
            parallelRequests: 25,
            retryLimit: 5,
        });
    
        for await (const chunk of iterator) {
            users.push(...chunk.items);
        }
        
        users = users.filter(item => item.message.user_id > 0).map((item) => item.message.user_id)

        return users
    },
    getTextForMailing: async (msg) => {
        const textForMailing = await msg.question(`–ù–∞—á–∞–ª–∏ —Å–±–æ—Ä –ª—é–¥–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. (–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ –≤ —ç—Ç–æ—Ç –¥–∏–∞–ª–æ–≥, –¥–ª—è —Ñ–æ—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –µ–≥–æ)`);

        let attAdd = [];

        if (textForMailing.attachments) {
            textForMailing.attachments.forEach((att) => {
                attAdd.push(String(att));
            });
        }
        
        const newArr = attAdd.join(',');

        msg.send(`–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–∞—á–∞–ª–æ —Ä–∞—Å—Å—ã–ª–∫–∏`, {
            keyboard: noButtonBoard
        })
    
        const acceptMailing = await msg.question(textForMailing.text, {
            attachment: newArr,
        })
    
        if (acceptMailing.text.toLowerCase() !== '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å') {
            msg.send('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
            return {
                textForMailing: null,
                media: null
            }
        }

        msg.send('ü§ñ –ë–æ—Ç —É–≤–µ–¥–æ–º–∏—Ç –æ –Ω–∞—á–∞–ª–µ —Ä–∞—Å—Å—ã–ª–∫–∏.')

        return {
            textForMailing: textForMailing.text,
            media: newArr
        }
    }
}

module.exports = {
    adminHelper
}
